{
  "openapi": "3.0.0",
  "info": {
    "title": "bargain4me",
    "version": "1.0.0",
    "description": "API for searching items, adding items, and chatting with a model."
  },
  "servers": [
    {
      "url": "https://d53503de-4a3d-4eb2-840a-bda4b5fea6e4-00-mpqny06oapwx.spock.replit.dev",
      "description": "Local development server"
    }
  ],
  "paths": {
    "/test_db": {
      "get": {
        "summary": "Test database connection",
        "responses": {
          "200": {
            "description": "Successfully connected to the database",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "PostgreSQL Version": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Database connection failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/searchItems": {
      "post": {
        "summary": "Create a new item search",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemSearch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Item search created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "integer" },
                    "userid": { "type": "string" },
                    "searchitem": { "type": "string" },
                    "minprice": { "type": "number" },
                    "maxprice": { "type": "number" }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Failed to create item",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/addItem": {
      "post": {
        "summary": "Add a new item to the database",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Item added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "integer" },
                    "description": { "type": "string" },
                    "searchid": { "type": "integer" },
                    "url": { "type": "string" },
                    "image": { "type": "string" },
                    "message": { "type": "string" },
                    "itemsearch": { "type": "string" },
                    "listedprice": { "type": "number" },
                    "estimateprice": { "type": "number" },
                    "minprice": { "type": "number" },
                    "maxprice": { "type": "number" }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Failed to add item",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/chat": {
      "post": {
        "summary": "Send a chat message and receive a response",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Chat response received",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatResponse"
                }
              }
            }
          },
          "500": {
            "description": "Failed to process chat request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rank": {
      "post": {
        "summary": "Rank items in a list",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemList"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Items received for ranking",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "received_items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Item"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ItemSearch": {
        "type": "object",
        "properties": {
          "userid": { "type": "string" },
          "searchitem": { "type": "string" },
          "minprice": { "type": "number" },
          "maxprice": { "type": "number" }
        }
      },
      "ItemCreate": {
        "type": "object",
        "properties": {
          "description": { "type": "string" },
          "searchid": { "type": "integer" },
          "url": { "type": "string" },
          "image": { "type": "string" },
          "message": { "type": "string" },
          "itemsearch": { "type": "string" },
          "listedprice": { "type": "number" },
          "estimateprice": { "type": "number" },
          "minprice": { "type": "number" },
          "maxprice": { "type": "number" }
        }
      },
      "ChatRequest": {
        "type": "object",
        "properties": {
          "message": { "type": "string" },
          "chat_history": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "role": { "type": "string" },
                "content": { "type": "string" }
              }
            }
          }
        }
      },
      "ChatResponse": {
        "type": "object",
        "properties": {
          "response": { "type": "string" }
        }
      },
      "Item": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "url": { "type": "string" },
          "price": { "type": "number" },
          "description": { "type": "string" }
        }
      },
      "ItemList": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Item"
            }
          }
        }
      }
    }
  }
}
